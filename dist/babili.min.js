!function(){"use strict";var a=angular.module("babili",[]),b=null,c=null,d=null,e=!1;a.provider("babili",function(){var f=this;f.options={apiUrl:"http://api.babili.local",socketUrl:"http://pusher.babili.local",aliveInterval:3e4},f.configure=function(a){Object.keys(a).forEach(function(b){f.options[b]=a[b]})},f.$get=["$q","$interval",function(g,h){Object.keys(f.options).forEach(function(b){a.constant(b,f.options[b])});var i=f.options.aliveInterval,j=angular.injector(["babili"]),k=function(a){return function(b){var c=j.get("BabiliMessage"),e=new c(b.data),f=d.roomWithId(e.room.id);void 0!==f&&null!==f?a.$apply(function(){f.messages.push(e),d.hasRoomOpened(f)||(f.unreadMessageCount=f.unreadMessageCount+1,d.unreadMessageCount=d.unreadMessageCount+1)}):j.get("BabiliRoom").get(e.room.id).then(function(b){d.addRoom(b),f=b,d.hasRoomOpened(f)||a.$apply(function(){f.unreadMessageCount=f.unreadMessageCount,d.unreadMessageCount=d.unreadMessageCount+1})})}};return{headers:function(){var a={Authorization:"Bearer "+b};return a},token:function(){return b},connect:function(a,f){var l=g.defer();return void 0===d||null===d?(b=f,j.get("BabiliMe").get().then(function(b){d=b,j.get("babiliSocket").initialize(function(b,c){e===!1&&(c.on("new message",k(a)),e=!0)});var f=function(){d.updateAliveness()};f(),c=h(f,i),l.resolve(d)})["catch"](function(a){l.reject(a)})):(console.err("Babili: /!\\ You should call 'babili.connect' only once."),l.resolve(d)),l.promise},disconnect:function(){var a=g.defer();return b=null,h.cancel(c),j.get("babiliSocket").disconnect().then(function(){a.resolve()}),a.promise}}}]})}(),function(){"use strict";angular.module("babili").factory("BabiliMe",["$http","$q","babili","apiUrl","BabiliRoom","BabiliMessage","babiliUtils",function(a,b,c,d,e,f,g){var h=function(a){this.id=a.id,this.rooms=[],this.openedRooms=[],this.unreadMessageCount=0,this.roomCount=0,a.meta&&(this.unreadMessageCount=a.meta.unreadMessageCount||0,this.roomCount=a.meta.roomCount||0)};return h.get=function(){return a({method:"GET",url:d+"/user",headers:c.headers()}).then(function(a){return new h(a.data.data)})},h.prototype.updateAliveness=function(){return a({method:"PUT",url:d+"/user/alive",headers:c.headers(),data:{data:{type:"alive"}}})},h.prototype.fetchRooms=function(a){var b=this;return e.query(a).then(function(a){return a.forEach(function(a){b.roomWithId(a.id)||b.addRoom(a),a.open!==!0||b.openedRoomWithId(a.id)||b.openedRooms.push(a)}),a})},h.prototype.fetchOpenedRooms=function(){return this.fetchRooms({onlyOpened:!0})},h.prototype.fetchClosedRooms=function(){return this.fetchRooms({onlyClosed:!0})},h.prototype.fetchMoreRooms=function(){return this.fetchRooms({firstSeenRoomId:this.firstSeenRoom.id})},h.prototype.fetchRoomByIds=function(a){return this.fetchRooms({"roomIds[]":a})},h.prototype.roomWithId=function(a){var b=g.findIndex(this.rooms,function(b){return b.id===a});return this.rooms[b]},h.prototype.openedRoomWithId=function(a){var b=g.findIndex(this.openedRooms,function(b){return b.id===a});return this.openedRooms[b]},h.prototype.hasRoomOpened=function(a){return Boolean(this.openedRoomWithId(a.id))},h.prototype.addRoom=function(a){(!this.firstSeenRoom||this.firstSeenRoom.lastActivityAt>a.lastActivityAt)&&(this.firstSeenRoom=a),this.rooms.push(a)},h.prototype.openRoom=function(a){var c=this,d=b.defer();return c.hasRoomOpened(a)?d.resolve():a.openMembership().then(function(){c.openedRooms.push(a),a.markAllMessageAsRead().then(function(a){c.unreadMessageCount=Math.max(c.unreadMessageCount-a,0)}),d.resolve(a)})["catch"](function(a){d.reject(a)}),d.promise},h.prototype.closeRoom=function(a){var c=this,d=b.defer();return c.hasRoomOpened(a)?a.closeMembership().then(function(){var b=g.findIndex(c.openedRooms,function(b){return b.id===a.id});b>-1&&c.openedRooms.splice(b,1),d.resolve(a)}):d.resolve(),d.promise},h.prototype.closeRooms=function(a){var c=this,d=a.map(function(a){return c.closeRoom(a)});return b.all(d)},h.prototype.openRoomAndCloseOthers=function(a){var b=this,c=b.openedRooms.filter(function(b){return b.id!==a.id});return b.closeRooms(c).then(function(){return b.openRoom(a)})},h.prototype.hasOpenedRooms=function(){return this.openedRooms.length>0},h.prototype.createRoom=function(a,b){var c=this;return e.create(a,c.id,b).then(function(a){return c.addRoom(a),a})},h.prototype.updateRoom=function(a){var b=this;return a.update().then(function(a){var c=b.roomWithId(a.id);return c.name=a.name,c})},h.prototype.addUserToRoom=function(a,b){return a.addUser(b)},h.prototype.sendMessage=function(a,c){var d=b.defer();return c&&c.content?a?f.create(a,c).then(function(b){a.addMessage(b),d.resolve(a)})["catch"](function(a){d.reject(a)}):d.reject(new Error("Room need to be defined.")):d.resolve(null),d.promise},h.prototype.messageSentByMe=function(a){return a&&a.sender&&this.id===a.sender.id},h.prototype.deleteMessage=function(a){var c=b.defer(),d=this;return a?f["delete"]({id:a.id,roomId:a.room.id}).then(function(){var b=d.roomWithId(a.room.id),e=g.findIndex(b.messages,function(b){return b.id===a.id});b.messages.splice(e,1),c.resolve()})["catch"](function(a){c.reject(a)}):c.resolve(null),c.promise},h}])}(),function(){"use strict";angular.module("babili").factory("BabiliMessage",["$http","babili","apiUrl","BabiliUser",function(a,b,c,d){var e=function(a){var b=angular.injector(["babili"]).get("BabiliRoom");this.id=a.id,this.content=a.attributes.content,this.contentType=a.attributes.contentType,this.createdAt=a.attributes.createdAt,this.room=new b(a.relationships.room.data),a.relationships.sender&&(this.sender=new d(a.relationships.sender.data))};return e.create=function(d,f){return a({method:"POST",url:c+"/user/rooms/"+d.id+"/messages",headers:b.headers(),data:{data:{type:"message",attributes:{content:f.content,contentType:f.contentType}}}}).then(function(a){return new e(a.data.data)})},e.query=function(d,f){return a({method:"GET",url:c+"/user/rooms/"+d.id+"/messages",headers:b.headers(),params:f}).then(function(a){return a.data.data.map(function(a){return new e(a)})})},e}])}(),function(){"use strict";angular.module("babili").factory("BabiliRoom",["$http","babili","$q","apiUrl","BabiliUser","BabiliMessage",function(a,b,c,d,e,f){var g=function(a){this.id=a.id,this.users=[],this.messages=[],a.attributes&&(this.lastActivityAt=a.attributes.lastActivityAt,this.name=a.attributes.name,this.open=a.attributes.open,this.unreadMessageCount=a.attributes.unreadMessageCount),a.relationships&&(a.relationships.users&&(this.users=a.relationships.users.data.map(function(a){return new e(a)})),a.relationships.messages&&(this.messages=a.relationships.messages.data.map(function(a){return new f(a)})),a.relationships.initiator&&(this.initiator=new e(a.relationships.initiator)))};return g.get=function(c){return a({method:"GET",url:d+"/user/rooms/"+c,headers:b.headers()}).then(function(a){return new g(a.data.data)})},g.query=function(c){return a({method:"GET",url:d+"/user/rooms",headers:b.headers(),params:c}).then(function(a){return a.data.data.map(function(a){return new g(a)})})},g.create=function(c,e,f){return a({method:"POST",url:d+"/user/rooms",headers:b.headers(),data:{data:{type:"room",attributes:{name:c},relationships:{users:{data:f.concat(e).map(function(a){return{type:"room",id:a}})}}}}}).then(function(a){return new g(a.data.data)})},g.prototype.updateMembership=function(c){var e=this;return a({method:"PUT",url:d+"/user/rooms/"+this.id+"/membership",headers:b.headers(),data:{data:{type:"membership",attributes:c}}}).then(function(a){return e.open=a.data.data.attributes.open,e})},g.prototype.update=function(){var c=this;return a({method:"PUT",url:d+"/user/rooms/"+this.id,headers:b.headers(),data:{data:{type:"room",attributes:{name:c.name}}}}).then(function(a){return c.name=a.data.data.attributes.name,c})},g.prototype.addUser=function(c){var f=this;return a({method:"POST",url:d+"/user/rooms/"+this.id+"/memberships",headers:b.headers(),data:{data:{type:"membership",relationships:{user:{data:{type:"user",id:c}}}}}}).then(function(a){return f.users.push(new e(a.data.data)),f})},g.prototype.openMembership=function(){return this.updateMembership({open:!0})},g.prototype.closeMembership=function(){return this.updateMembership({open:!1})},g.prototype.addMessage=function(a){this.messages.push(a)},g.prototype.markAllMessageAsRead=function(){var e=this,f=c.defer();return e.unreadMessageCount>0?a({method:"PUT",url:d+"/user/rooms/"+this.id+"/membership/unread-messages",headers:b.headers()}).then(function(a){e.unreadMessageCount=0,f.resolve(a.readMessageCount)}):(f.resolve(0),f.promise)},g.prototype.fetchMoreMessages=function(){var a=this,b={firstSeenMessageId:a.messages[0].id};return f.query(a,b).then(function(b){return a.messages.unshift.apply(a.messages,b),b})},g}])}(),function(){"use strict";angular.module("babili").factory("babiliSocket",["babili","socketUrl","$q",function(a,b,c){var d,e={initialize:function(c){d=io.connect(b,{query:"token="+a.token()}),d.on("connect",function(){c(null,d)})},disconnect:function(){var a=c.defer();return d?d.disconnect(function(){a.resolve()}):a.resolve(),a.promise}};return e}])}(),function(){"use strict";angular.module("babili").factory("BabiliUser",function(){var a=function(a){this.id=a.id,a.attributes&&(this.status=a.attributes.status)};return a})}(),function(){"use strict";angular.module("babili").factory("babiliUtils",function(){var a={findIndex:function(a,b){for(var c,d=a.length,e=0;d>e;e+=1)if(c=a[e],b(c))return e;return-1}};return a})}();