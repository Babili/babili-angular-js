!function(){"use strict";var a=null,b=null,c=angular.module("babili",["ngResource"]);c.provider("babili",function(){var d=this;d.options={apiUrl:"babili-api",socketUrl:"",aliveInterval:3e4},d.configure=function(a){d.options=_.extend(d.options,a)},d.$get=["$q","$interval","$http","$rootScope",function(e,f,g,h){_.forEach(d.options,function(a,b){c.constant(b,a)});var i=d.options.aliveInterval,j=angular.injector(["babili"]),k=function(a,b){return function(c){var d=a.roomWithId(c.roomId);void 0!==d&&null!==d?b.$apply(function(){d.messages.push(c)}):j.get("BabiliRoom").get({id:c.roomId}).$promise.then(function(b){a.rooms.push(b),d=b}),a.hasRoomOpened(d)||h.$apply(function(){d.unreadMessageCount=d.unreadMessageCount+1})}};return{headers:function(){var b={};return b["x-babili-token"]=a,b},token:function(){return a},connect:function(c,d){a=d;var g=e.defer();return j.get("BabiliMe").get().$promise.then(function(a){j.get("babiliSocket").initialize(function(b,d){d.on("new message",k(a,c))});var d=function(){j.get("BabiliAlive").save({})};d(),b=f(d,i),g.resolve(a)})["catch"](function(a){g.reject(a)}),g.promise},disconnect:function(){var c=e.defer();return a=null,f.cancel(b),j.get("babiliSocket").disconnect().then(function(){c.resolve()}),c.promise}}}]})}(),function(){"use strict";angular.module("babili").factory("BabiliAlive",["$resource","babili","apiUrl",function(a,b,c){return a(c+"/client/alive",{},{save:{method:"POST",headers:b.headers()}})}])}(),function(){"use strict";angular.module("babili").factory("BabiliMe",["$resource","$q","babili","apiUrl","BabiliRoom","BabiliMessage",function(a,b,c,d,e,f){var g=a(d+"/client/me",{},{get:{method:"GET",headers:c.headers(),transformResponse:function(a){var b=angular.fromJson(a);return b.rooms&&(b.rooms=b.rooms.map(function(a){return new e(a)})),b.openedRooms=[],b.openedRoomIds&&(b.openedRooms=b.openedRoomIds.map(function(a){return _.find(b.rooms,function(b){return b.id===a})})),b}}});return g.prototype.roomWithId=function(a){var b=_.find(this.rooms,function(b){return b.id===a});return b},g.prototype.hasRoomOpened=function(a){var b=_.find(this.openedRooms,function(b){return a&&b.id===a.id});return Boolean(b)},g.prototype.openRoom=function(a){var c=this,d=b.defer();return c.hasRoomOpened(a)?d.resolve():e.open({id:a.id}).$promise.then(function(){c.openedRooms.push(a),a.markAllMessageAsRead(),d.resolve(a)}),d.promise},g.prototype.closeRoom=function(a){var c=this,d=b.defer();return c.hasRoomOpened(a)?e.close({id:a.id}).$promise.then(function(){_.remove(c.openedRooms,function(b){return b.id===a.id}),d.resolve(a)}):d.resolve(),d.promise},g.prototype.closeRooms=function(a){var c=this,d=a.map(function(a){return c.closeRoom(a)});return b.all(d)},g.prototype.openRoomAndCloseOthers=function(a){var b=this,c=b.rooms.filter(function(b){return b.id!==a.id});return b.closeRooms(c).then(function(){return b.openRoom(a)})},g.prototype.hasOpenedRooms=function(){return!_.isEmpty(this.openedRooms)},g.prototype.createRoom=function(a,c){var d=this,f=b.defer(),g=new e({name:a,userIds:c.concat(d.id)});return e.save(g).$promise.then(function(a){d.rooms.push(a),f.resolve(a)})["catch"](function(a){f.reject(a)}),f.promise},g.prototype.updateRoomName=function(a){var c=this,d=b.defer();return a.update().then(function(b){var e=_.findIndex(c.rooms,function(b){return a.id===b.id});c.rooms[e].name=b.name,d.resolve()})["catch"](function(a){d.reject(a)}),d.promise},g.prototype.addUserToRoom=function(a,b){return a.addUser(this,b)},g.prototype.sendMessage=function(a,c){var d=b.defer(),e=this;return c&&c.content?a?f.save({roomId:a.id},c).$promise.then(function(b){var c=e.roomWithId(a.id);c.messages.push(b),d.resolve(b)})["catch"](function(a){d.reject(a)}):d.reject(new Error("Room need to be defined.")):d.resolve(null),d.promise},g.prototype.messageSentByMe=function(a){return a&&this.id===a.senderId},g.prototype.unreadMessageCount=function(){var a=0;return this.rooms.forEach(function(b){a+=b.unreadMessageCount}),a},g.prototype.deleteMessage=function(a){var c=b.defer(),d=this;return a?f["delete"]({id:a.id,roomId:a.roomId}).$promise.then(function(){var b=d.roomWithId(a.roomId),e=_.findIndex(b.messages,function(b){return b.id===a.id});b.messages.splice(e,1),c.resolve()})["catch"](function(a){c.reject(a)}):c.resolve(null),c.promise},g}])}(),function(){"use strict";angular.module("babili").factory("BabiliMembership",["$resource","babili","apiUrl",function(a,b,c){return a(c+"/client/rooms/:roomId/memberships/:id",{membershipId:"@membershipId",id:"@id"},{save:{method:"POST",headers:b.headers()}})}])}(),function(){"use strict";angular.module("babili").factory("BabiliMessage",["$resource","babili","apiUrl",function(a,b,c){return a(c+"/client/rooms/:roomId/messages/:id",{roomId:"@roomId",id:"@id"},{save:{method:"POST",headers:b.headers()},get:{method:"GET",headers:b.headers()},query:{method:"GET",isArray:!0,headers:b.headers()},"delete":{method:"delete",headers:b.headers()}})}])}(),function(){"use strict";angular.module("babili").factory("BabiliRoom",["$resource","babili","$q","apiUrl","BabiliMessage","BabiliMembership",function(a,b,c,d,e,f){var g=a(d+"/client/rooms/:id",{id:"@id"},{save:{method:"POST",headers:b.headers()},get:{method:"GET",headers:b.headers()},update:{method:"PUT",headers:b.headers()},"delete":{method:"DELETE",headers:b.headers()},read:{url:d+"/client/rooms/:id/read",params:{id:"@id"},method:"POST",headers:b.headers()},open:{url:d+"/client/rooms/:id/open",params:{id:"@id"},method:"POST",headers:b.headers()},close:{url:d+"/client/rooms/:id/open",params:{id:"@id"},method:"DELETE",headers:b.headers()}});return g.prototype.markAllMessageAsRead=function(){var a=this,b=c.defer();return a.unreadMessageCount>0?g.read({id:this.id}).$promise.then(function(){a.unreadMessageCount=0,b.resolve(!0)}):b.resolve(!1),b.promise},g.prototype.addUser=function(a,b){var d=c.defer(),e=this;return f.save({roomId:e.id},{userId:b},function(a){e.users.push(a.user),d.resolve()},function(a){d.reject(a)}),d.promise},g.prototype.update=function(){var a=c.defer(),b={name:this.name};return g.update({id:this.id},b,function(b){a.resolve(b)},function(b){a.reject(b)}),a.promise},g}])}(),function(){"use strict";angular.module("babili").factory("babiliSocket",["babili","socketUrl","$q",function(a,b,c){var d,e={initialize:function(c){d=io.connect(b,{query:"token="+a.token()}),d.on("connect",function(){c(null,d)})},disconnect:function(){var a=c.defer();return d?d.disconnect(function(){a.resolve()}):a.resolve(),a.promise}};return e}])}();